openapi: 3.0.3
info:
  title: Food Management API
  description: API for managing food items in a restaurant.
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /food:
    get:
      summary: Get a list of foods with pagination
      description: Retrieve a paginated list of foods, sorted by creation date in descending order.
      tags:
        - Food
      parameters:
        - name: page
          in: query
          description: Page number (default is 1)
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of items per page (default is 10)
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Successfully retrieved list of foods
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully!
                  status:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      docs:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: '67c1c58322cabb5605f05ba0'
                            name:
                              type: string
                              example: 'Gỏi Cuốn'
                            category:
                              type: string
                              example: 'FOOD'
                            description:
                              type: string
                              example: 'Gỏi cuốn tôm thịt với rau sống và nước chấm đậm đà.'
                            price:
                              type: integer
                              example: 35000
                            isAvailable:
                              type: boolean
                              example: true
                            thumbnail:
                              type: string
                              example: 'https://example.com/goicuon.jpg'
                            createdAt:
                              type: string
                              format: date-time
                              example: '2025-02-28T14:17:39.693Z'
                            updatedAt:
                              type: string
                              format: date-time
                              example: '2025-03-08T16:51:19.569Z'
                            __v:
                              type: integer
                              example: 0
                      totalDocs:
                        type: integer
                        example: 9
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 1
                      page:
                        type: integer
                        example: 1
                      pagingCounter:
                        type: integer
                        example: 1
                      hasPrevPage:
                        type: boolean
                        example: false
                      hasNextPage:
                        type: boolean
                        example: false
                      prevPage:
                        type: integer
                        nullable: true
                        example: null
                      nextPage:
                        type: integer
                        nullable: true
                        example: null
    post:
      summary: Insert a new food item
      description: Add a new food item to the database.
      tags:
        - Food
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Gỏi Cuốn'
                category:
                  type: string
                  example: 'FOOD'
                description:
                  type: string
                  example: 'Gỏi cuốn tôm thịt với rau sống và nước chấm đậm đà.'
                price:
                  type: integer
                  example: 35000
                isAvailable:
                  type: boolean
                  example: true
                thumbnail:
                  type: string
                  format: uri
                  example: 'https://example.com/goicuon.jpg'
                createdAt:
                  type: string
                  format: date-time
                  example: '2025-02-28T14:17:39.693Z'
                updatedAt:
                  type: string
                  format: date-time
                  example: '2025-03-08T16:51:19.569Z'
      responses:
        '201':
          description: Food item created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Food created successfully'
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: '67c1c58322cabb5605f05ba0'
                      name:
                        type: string
                        example: 'Gỏi Cuốn'
                      category:
                        type: string
                        example: 'FOOD'
                      description:
                        type: string
                        example: 'Gỏi cuốn tôm thịt với rau sống và nước chấm đậm đà.'
                      price:
                        type: integer
                        example: 35000
                      isAvailable:
                        type: boolean
                        example: true
                      thumbnail:
                        type: string
                        format: uri
                        example: 'https://example.com/goicuon.jpg'
                      createdAt:
                        type: string
                        format: date-time
                        example: '2025-02-28T14:17:39.693Z'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2025-03-08T16:51:19.569Z'
  /food/{id}:
    patch:
      summary: Update a food item
      description: Update details of an existing food item.
      tags:
        - Food
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the food item.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Bánh Xèo'
                category:
                  type: string
                  example: 'FOOD'
                description:
                  type: string
                  example: 'Bánh xèo giòn rụm với nhân tôm, thịt và giá đỗ.'
                price:
                  type: integer
                  example: 45000
                isAvailable:
                  type: boolean
                  example: true
                thumbnail:
                  type: string
                  example: 'https://example.com/banhxeo.jpg'
      responses:
        '200':
          description: Food item updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Food updated successfully'
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: '67c1c58322cabb5605f05ba5'
                      name:
                        type: string
                        example: 'Bánh Xèo'
                      category:
                        type: string
                        example: 'FOOD'
                      description:
                        type: string
                        example: 'Bánh xèo giòn rụm với nhân tôm, thịt và giá đỗ.'
                      price:
                        type: integer
                        example: 45000
                      isAvailable:
                        type: boolean
                        example: true
                      thumbnail:
                        type: string
                        example: 'https://example.com/banhxeo.jpg'
                      createdAt:
                        type: string
                        format: date-time
                        example: '2025-02-28T14:17:09.371Z'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2025-03-08T16:51:21.228Z'
    delete:
      summary: Delete a food item
      description: Remove a food item from the system.
      tags:
        - Food
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Food item deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Food deleted successfully'
  /food/{id}/availability:
    patch:
      summary: Update food availability
      description: Update the availability status of a food item.
      tags:
        - Food
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isAvailable:
                  type: boolean
      responses:
        '200':
          description: Availability updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Availability updated'
  /food/thumbnail:
    post:
      summary: Upload a food thumbnail
      description: Upload an image file as a food thumbnail.
      tags:
        - Food
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thumbnail:
                  type: string
                  format: binary
      responses:
        '200':
          description: Thumbnail uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Thumbnail uploaded successfully'
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        example: 'https://cdn.example.com/thumbnails/image.jpg'

  /table:
    get:
      summary: Get list of tables
      description: Retrieve a paginated list of tables.
      tags:
        - Table
      parameters:
        - name: page
          in: query
          description: Page number (default is 1)
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of items per page (default is 10)
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: Successfully retrieved tables.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Tables found successfully'
                  status:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      docs:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: '67bc37ec1576d17f62cf49b9'
                            numericalOrder:
                              type: integer
                              example: 14
                            isAvailable:
                              type: boolean
                              example: true
                            currentNumOfPeople:
                              type: integer
                              example: 4
                            maxNumOfPeople:
                              type: integer
                              example: 6
                            createdAt:
                              type: string
                              format: date-time
                              example: '2025-02-22T10:50:51.852Z'
                            updatedAt:
                              type: string
                              format: date-time
                              example: '2025-03-15T07:32:10.405Z'
                            __v:
                              type: integer
                              example: 0
                      totalDocs:
                        type: integer
                        example: 14
                      limit:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 2
                      page:
                        type: integer
                        example: 1
                      pagingCounter:
                        type: integer
                        example: 1
                      hasPrevPage:
                        type: boolean
                        example: false
                      hasNextPage:
                        type: boolean
                        example: true
                      prevPage:
                        type: integer
                        nullable: true
                        example: null
                      nextPage:
                        type: integer
                        nullable: true
                        example: 2
    post:
      summary: Add a new table
      description: Create a new table entry.
      tags:
        - Table
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                numericalOrder:
                  type: integer
                  example: 5
                  description: The numerical order of the table.
                isAvailable:
                  type: boolean
                  example: true
                  description: Indicates if the table is available.
                currentNumOfPeople:
                  type: integer
                  example: 3
                  description: The current number of people seated at the table.
                maxNumOfPeople:
                  type: integer
                  example: 6
                  description: The maximum capacity of the table.
      responses:
        '201':
          description: Table created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Table created successfully'
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: '67bc37ec1576d17f62cf49b9'
                      numericalOrder:
                        type: integer
                        example: 5
                      isAvailable:
                        type: boolean
                        example: true
                      currentNumOfPeople:
                        type: integer
                        example: 3
                      maxNumOfPeople:
                        type: integer
                        example: 6
                      createdAt:
                        type: string
                        format: date-time
                        example: '2025-02-22T10:50:51.852Z'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2025-03-15T07:32:10.405Z'
                      __v:
                        type: integer
                        example: 0
  /table/{id}:
    patch:
      summary: Update a table
      description: Modify details of an existing table.
      tags:
        - Table
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the table to be updated.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                numericalOrder:
                  type: integer
                  example: 5
                  description: The numerical order of the table.
                isAvailable:
                  type: boolean
                  example: true
                  description: Indicates if the table is available.
                currentNumOfPeople:
                  type: integer
                  example: 3
                  description: The current number of people seated at the table.
                maxNumOfPeople:
                  type: integer
                  example: 6
                  description: The maximum capacity of the table.
      responses:
        '200':
          description: Table updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Table updated successfully'
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: '67bc37ec1576d17f62cf49b9'
                      numericalOrder:
                        type: integer
                        example: 5
                      isAvailable:
                        type: boolean
                        example: true
                      currentNumOfPeople:
                        type: integer
                        example: 3
                      maxNumOfPeople:
                        type: integer
                        example: 6
                      createdAt:
                        type: string
                        format: date-time
                        example: '2025-02-22T10:50:51.852Z'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2025-03-15T07:32:10.405Z'
                      __v:
                        type: integer
                        example: 0
    delete:
      summary: Delete a table
      description: Remove a table by ID
      tags:
        - Table
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Table deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /order:
    post:
      summary: Create a new order
      description: Place a new order with items, table, and an optional voucher.
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  description: List of ordered food items.
                  items:
                    type: object
                    properties:
                      food:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: '67c1c58322cabb5605f05ba0'
                            description: The unique identifier of the food item.
                          price:
                            type: number
                            example: 12.99
                            description: The price of the food item.
                      tableId:
                        type: string
                        example: '67bc37f21576d17f62cf49bb'
                        description: The unique identifier of the table.
                      quantity:
                        type: integer
                        example: 2
                        description: The quantity of the ordered food item.
                voucher:
                  type: object
                  description: Optional voucher details.
                  properties:
                    code:
                      type: string
                      example: 'DISCOUNT10'
                      description: The voucher code for discount.
                  nullable: true
                message:
                  type: string
                  example: 'Please serve quickly'
                  description: Optional message for the order.
      responses:
        '201':
          description: Order created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Order created successfully'
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: '67bc37ec1576d17f62cf49b9'
                        description: The unique identifier of the order.
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            food:
                              type: object
                              properties:
                                _id:
                                  type: string
                                  example: '67c1c58322cabb5605f05ba0'
                                price:
                                  type: number
                                  example: 12.99
                            tableId:
                              type: string
                              example: '67bc37f21576d17f62cf49bb'
                            quantity:
                              type: integer
                              example: 2
                      voucher:
                        type: object
                        nullable: true
                        properties:
                          code:
                            type: string
                            example: 'DISCOUNT10'
                      message:
                        type: string
                        example: 'Please serve quickly'
                      createdAt:
                        type: string
                        format: date-time
                        example: '2025-03-15T07:32:10.405Z'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2025-03-15T07:32:10.405Z'
                      __v:
                        type: integer
                        example: 0
    get:
      summary: Get all orders
      description: Retrieve a list of all orders along with their associated bills.
      tags:
        - Order
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Orders found'
                  status:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      bills:
                        type: array
                        description: List of bills associated with the orders.
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: '67d53885c92203568eb709b1'
                            totalPrice:
                              type: number
                              example: 25.98
                            orderId:
                              type: string
                              example: '67d53885c92203568eb709ac'
                            isPaid:
                              type: boolean
                              example: false
                            voucherId:
                              type: string
                              example: '67bebd626e1de48060da6adb'
                            createdAt:
                              type: string
                              format: date-time
                              example: '2025-03-15T08:21:25.638Z'
                            updatedAt:
                              type: string
                              format: date-time
                              example: '2025-03-15T08:21:25.638Z'
                            __v:
                              type: integer
                              example: 0
                      orders:
                        type: array
                        description: List of orders.
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: '67d53885c92203568eb709ac'
                            tableId:
                              type: string
                              example: '67bc37f21576d17f62cf49bb'
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  foodId:
                                    type: string
                                    example: '67c1c58322cabb5605f05ba0'
                                  price:
                                    type: number
                                    example: 12.99
                                  quantity:
                                    type: integer
                                    example: 2
                                  _id:
                                    type: string
                                    example: '67d53885c92203568eb709ad'
                            status:
                              type: string
                              example: 'ORDERED'
                            messages:
                              type: array
                              items:
                                type: string
                              example: ['Please serve quickly']
                            createdAt:
                              type: string
                              format: date-time
                              example: '2025-03-15T08:21:25.626Z'
                            updatedAt:
                              type: string
                              format: date-time
                              example: '2025-03-15T08:21:25.626Z'
                            __v:
                              type: integer
                              example: 0
    delete:
      summary: Delete all orders
      description: Remove all orders and mark tables as available
      tags:
        - Order
      responses:
        '200':
          description: Orders deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'All orders deleted'
                  status:
                    type: integer
                    example: 200
  /order/{orderId}/reject:
    post:
      summary: Reject an order
      description: Reject an order with a given reason
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  example: 'Out of stock'
      responses:
        '200':
          description: Order rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Order rejected successfully'
                  status:
                    type: integer
                    example: 200
  /order/reject:
    get:
      summary: Get rejected orders
      description: Retrieve a list of all rejected orders
      tags:
        - Order
      responses:
        '200':
          description: Rejected orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Rejected Orders found'
                  status:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      rejectedOrders:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: '67d53a2dc92203568eb70a01'
                            orderId:
                              type: string
                              example: '67d5388bc92203568eb709b4'
                            reason:
                              type: string
                              example: 'Customer canceled the order'
                            createdAt:
                              type: string
                              format: date-time
                              example: '2025-03-15T08:30:25.638Z'
                            updatedAt:
                              type: string
                              format: date-time
                              example: '2025-03-15T08:30:25.638Z'

    delete:
      summary: Delete all rejected orders
      description: Remove all rejected orders
      tags:
        - Order
      responses:
        '200':
          description: All rejected orders deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'All rejected orders deleted successfully'
                  status:
                    type: integer
                    example: 200
  /order/{billId}/{orderId}/reorder:
    patch:
      summary: Reorder a rejected order
      description: Reorder an order that was previously rejected
      tags:
        - Order
      parameters:
        - name: billId
          in: path
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      food:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: '67c1c58322cabb5605f05ba0'
                          price:
                            type: number
                            example: 12.99
                      tableId:
                        type: string
                        example: '67bc37f21576d17f62cf49bb'
                      quantity:
                        type: integer
                        example: 2
                voucher:
                  type: object
                  properties:
                    code:
                      type: string
                      example: 'DISCOUNT10'
                message:
                  type: string
                  example: 'Please serve quickly'
      responses:
        '200':
          description: Order reordered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Order reordered successfully'
                  status:
                    type: integer
                    example: 200
  /order/{orderId}/status:
    post:
      summary: Update order status
      description: Change the status of an order
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ['ORDERED', 'PREPARING', 'COMPLETED', 'CANCELLED']
                  example: 'PREPARING'
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Updated status'
                  status:
                    type: integer
                    example: 200
  /order/bill/{billId}/order/{orderId}:
    patch:
      summary: Update an order
      description: Modify an existing order
      tags:
        - Order
      parameters:
        - name: billId
          in: path
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      food:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: '67c1c58322cabb5605f05ba0'
                          price:
                            type: number
                            example: 12.99
                      quantity:
                        type: integer
                        example: 2
                      tableId:
                        type: string
                        example: '67bc37f21576d17f62cf49bb'
                message:
                  type: string
                  example: 'Please serve quickly'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Order updated'
                  status:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      newBill:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: '67d53885c92203568eb709b1'
                          totalPrice:
                            type: number
                            example: 25.98
                      newOrder:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: '67d53885c92203568eb709ac'
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                foodId:
                                  type: string
                                  example: '67c1c58322cabb5605f05ba0'
                                price:
                                  type: number
                                  example: 12.99
                                quantity:
                                  type: integer
                                  example: 2
                          messages:
                            type: array
                            items:
                              type: string
                            example: ['Please serve quickly']
  /order/bill/{billId}/order/{orderId}/payment:
    patch:
      summary: Complete an order payment
      description: Mark an order as completed and set the corresponding table as available.
      tags:
        - Order
      parameters:
        - name: billId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the bill to be marked as paid.
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the order to be marked as completed.
      responses:
        '200':
          description: Order marked as completed and table set as available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order completed
        '400':
          description: Bad request, order or bill not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order or Bill not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Something went wrong!


  /bill:
    get:
      summary: Get all bills
      description: Retrieve a list of all bills in the system.
      operationId: getBills
      tags:
        - Bill
      responses:
        '200':
          description: A list of bills.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Bills found'
                  status:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: '67d53885c92203568eb709b1'
                        totalPrice:
                          type: number
                          example: 25.98
                        orderId:
                          type: string
                          example: '67d53885c92203568eb709ac'
                        isPaid:
                          type: boolean
                          example: false
                        voucherId:
                          type: string
                          example: '67bebd626e1de48060da6adb'
                        createdAt:
                          type: string
                          format: date-time
                          example: '2025-03-15T08:21:25.638Z'
                        updatedAt:
                          type: string
                          format: date-time
                          example: '2025-03-15T08:21:25.638Z'

    delete:
      summary: Delete all bills
      description: Remove all bills from the system.
      operationId: deleteAllBills
      tags:
        - Bill
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'All bills deleted'
                  status:
                    type: integer
                    example: 200
  /voucher:
    post:
      summary: Create a new voucher
      description: Inserts a new voucher into the system.
      tags:
        - Voucher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Holiday Discount'
                description:
                  type: string
                  example: '10% off for holiday purchases'
                type:
                  type: string
                  enum: [FIXED_AMOUNT, PERCENTAGE]
                  example: 'PERCENTAGE'
                code:
                  type: string
                  example: 'HOLIDAY10'
                value:
                  type: number
                  example: 10
                startDate:
                  type: string
                  format: date-time
                  example: '2025-01-01T00:00:00Z'
                endDate:
                  type: string
                  format: date-time
                  example: '2025-12-31T23:59:59Z'
                maxUsage:
                  type: integer
                  example: 100
                usageCount:
                  type: integer
                  example: 0
                maxUsuagePerUser:
                  type: integer
                  example: 1
                isActive:
                  type: boolean
                  example: true
      responses:
        201:
          description: Voucher created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Voucher created successfully'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '64b5d7a4f7e2a1c7b1d5f6a2'
                      name:
                        type: string
                        example: 'Holiday Discount'
                      code:
                        type: string
                        example: 'HOLIDAY10'
                      value:
                        type: number
                        example: 10
                      isActive:
                        type: boolean
                        example: true

    get:
      summary: Get all vouchers
      description: Retrieves a list of all vouchers available in the system.
      tags:
        - Voucher
      responses:
        200:
          description: A list of vouchers
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Get voucher successfully!'
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '64b5d7a4f7e2a1c7b1d5f6a2'
                        name:
                          type: string
                          example: 'Holiday Discount'
                        code:
                          type: string
                          example: 'HOLIDAY10'
                        value:
                          type: number
                          example: 10
                        isActive:
                          type: boolean
                          example: true
